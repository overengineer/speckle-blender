version: 2.1

orbs:
  python: circleci/python@1.3.2
  # Using windows for builds
  win: circleci/windows@2.4.0
  # Upload artifacts to s3
  aws-s3: circleci/aws-s3@2.0.0

commands:
  install-specklepy-windows: # Reusable job for installing `specklepy` for windows machines
    parameters:
      python-version:
        type: string
        default: "" # leave blank for blender v2.93
    steps:
      - when:
          condition: << parameters.python-version >>
          steps:
            - run:
                name: Upgrade python version << parameters.python-version >>
                shell: powershell.exe
                command: |
                  choco upgrade python --version=<< parameters.python-version >>
                  refreshenv
                  python --version
      - run:
          name: Install specklepy into modules directory
          shell: powershell.exe
          command: |
            $pyarr=(python --version).split(' ')[1].split('.')
            $pyver=($pyarr[0..1] -join '.')
            echo "using python version:" $pyver
            $specklepy=(python patch_version.py)
            python -m pip install --target=./modules-$pyver specklepy==$specklepy

jobs:
  build-connector-win: # Reusable job for basic connectors
    executor:
      name: win/default # comes with python 3.7.3
      shell: cmd.exe
    parameters:
      slug:
        type: string
        default: "blender"
      installer:
        type: boolean
        default: false
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - install-specklepy-windows
      - install-specklepy-windows:
          python-version: "3.9.10"
      - install-specklepy-windows:
          python-version: "3.10.2"
      - run:
          name: Patch
          shell: powershell.exe
          command:
            | # If no tag, use 0.0.0.1 and don't make any YML (for testing only!)
            $tag = if([string]::IsNullOrEmpty($env:CIRCLE_TAG)) { "0.0.0" } else { $env:CIRCLE_TAG }
            $semver = if($tag.Contains('/')) {$tag.Split("/")[1] } else { $tag }
            $ver = if($semver.Contains('-')) {$semver.Split("-")[0] } else { $semver }
            $version = "$($ver).$($env:CIRCLE_BUILD_NUM)"
            $channel = if($semver.Contains('-')) { "prerelease" } else { "latest" }
            New-Item -Force "speckle-sharp-ci-tools/Installers/blender/$channel.yml" -ItemType File -Value "version: $semver"
            echo $semver
            python patch_version.py $semver
      - run:
          name: Installer
          shell: cmd.exe #does not work in powershell
          command: speckle-sharp-ci-tools\InnoSetup\ISCC.exe speckle-sharp-ci-tools\blender.iss /Sbyparam=$p
      - when:
          condition: << parameters.installer >>
          steps:
            - persist_to_workspace:
                root: ./
                paths:
                  - speckle-sharp-ci-tools/Installers

  build-connector-mac:
    macos:
      xcode: 12.5.1
    parameters:
      slug:
        type: string
        default: "blender-mac"
      installername:
        type: string
        default: "SpeckleBlenderInstall"
      runtime:
        type: string
        default: "osx-x64"
      installer:
        type: boolean
        default: false
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Install mono
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew install mono
      # Compress build files
      - run:
          name: Install dotnet
          command: curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin
      - run:
          name: Build & Patch Version
          command: |
            TAG=$(if [ "${CIRCLE_TAG}" ]; then echo $CIRCLE_TAG; else echo "0.0.0"; fi;)
            SEMVER=$(echo "$TAG" | sed -e 's/[a-zA-Z-]*\///')
            VER=$(echo "$SEMVER" | sed -e 's/-beta//')
            VERSION=$(echo $VER.$CIRCLE_BUILD_NUM)
            CHANNEL=$(if [[ "$VERSION" == *"-"* ]]; then echo $(cut -d "-" -f2 \<\<\< $VERSION); else echo latest; fi)
            mkdir -p speckle-sharp-ci-tools/Installers/<< parameters.slug >>
            if [ "${CIRCLE_TAG}" ]; then echo "version: $SEMVER" > "speckle-sharp-ci-tools/Installers/<< parameters.slug >>/$CHANNEL.yml"; fi
            python3 patch_version.py $SEMVER
      # update python and package dependencies
      - when:
          condition:
            and:
              # - << parameters.installer >>
              - equal: [osx-x64, << parameters.runtime >>]
          steps:
            - run:
                name: Install python 3.10
                command: |
                  brew install python@3.10
                  brew link --overwrite python@3.10
            - run:
                name: Package specklepy dependencies for blender 3.1 & 3.2
                command: |
                  python3 --version
                  python3 -m pip install --target=./modules-intel-3.10 specklepy==$(python3 -m patch_version)
                  zip -r modules-intel-3.10.zip modules-intel-3.10/
                  cp modules-intel-3.10.zip speckle-sharp-ci-tools/Mac/<<parameters.installername>>/.installationFiles
      - run:
          name: Zip Connector files
          command: |
            zip -r << parameters.slug >>.zip bpy_speckle/
      - run:
          name: Copy connector files to installer
          command: |
            mkdir -p speckle-sharp-ci-tools/Mac/<<parameters.installername>>/.installationFiles/
            cp << parameters.slug >>.zip speckle-sharp-ci-tools/Mac/<<parameters.installername>>/.installationFiles
            python3 patch_version.py > speckle-sharp-ci-tools/Mac/<<parameters.installername>>/.installationFiles/specklepy_ver.yml

      - run:
          name: Build Mac installer
          command: ~/.dotnet/dotnet publish speckle-sharp-ci-tools/Mac/<<parameters.installername>>/<<parameters.installername>>.sln -r << parameters.runtime >> -c Release
      - run:
          name: Zip installer
          command: |
            cd speckle-sharp-ci-tools/Mac/<<parameters.installername>>/bin/Release/net6.0/<< parameters.runtime >>/
            zip -r << parameters.slug >>.zip ./
      - store_artifacts:
          path: speckle-sharp-ci-tools/Mac/<<parameters.installername>>/bin/Release/net6.0/<< parameters.runtime >>/<< parameters.slug >>.zip
      - run:
          name: Copy to installer location
          command: |
            TAG=$(if [ "${CIRCLE_TAG}" ]; then echo $CIRCLE_TAG; else echo "0.0.0"; fi;)
            SEMVER=$(echo "$TAG" | sed -e 's/[a-zA-Z-]*\///')
            cp speckle-sharp-ci-tools/Mac/<<parameters.installername>>/bin/Release/net6.0/<< parameters.runtime >>/<< parameters.slug >>.zip speckle-sharp-ci-tools/Installers/<< parameters.slug >>/<< parameters.slug >>-$SEMVER.zip
      - when:
          condition: << parameters.installer >>
          steps:
            - persist_to_workspace:
                root: ./
                paths:
                  - speckle-sharp-ci-tools/Installers

  get-ci-tools: # Clones our ci tools and persists them to the workspace
    docker:
      - image: cimg/base:2021.01
    steps:
      - run: # Could not get ssh to work, so using a personal token
          name: Clone
          command: git clone https://$GITHUB_TOKEN@github.com/specklesystems/speckle-sharp-ci-tools.git speckle-sharp-ci-tools
      - persist_to_workspace:
          root: ./
          paths:
            - speckle-sharp-ci-tools


  deploy-connector-new:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    parameters:
      slug:
        type: string
      file_slug:
        type: string
      os:
        type: string
      extension:
        type: string
      arch:
        type: string
        default: Any
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Install Manager Feed CLI
          command: dotnet tool install --global Speckle.Manager.Feed
      - run:
          name: Upload new version
          command: |
            TAG=$(if [ "${CIRCLE_TAG}" ]; then echo $CIRCLE_TAG; else echo "0.0.0"; fi;)
            SEMVER=$(echo "$TAG" | sed -e 's/\/[a-zA-Z-]*//')
            /root/.dotnet/tools/Speckle.Manager.Feed deploy \
                -s << parameters.slug >> \
                -v ${SEMVER} \
                -u https://releases.speckle.dev/installers/<< parameters.file_slug >>/<< parameters.file_slug >>-${SEMVER}.<< parameters.extension >> \
                -o << parameters.os >> \
                -a << parameters.arch >> \
                -f speckle-sharp-ci-tools/Installers/<< parameters.file_slug >>/<< parameters.file_slug >>-${SEMVER}.<< parameters.extension >>

workflows:
  build: # build the installers, but don't persist to workspace for deployment
    jobs:
      - get-ci-tools:
          filters:
            branches:
              only:
                - main
                - /ci\/.*/
      - build-connector-win:
          name: Windows Build
          requires:
            - get-ci-tools
          filters:
            branches:
              only:
                - main
                - /ci\/.*/
      - build-connector-mac:
          name: Mac ARM Build
          slug: blender-mac-arm
          runtime: osx-arm64
          requires:
            - get-ci-tools
      - build-connector-mac:
          name: Mac Intel Build
          slug: blender-mac-intel
          runtime: osx-x64
          requires:
            - get-ci-tools
  deploy: # build installers and deploy
    jobs:
      - get-ci-tools:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/

      - build-connector-win:
          name: Windows Build
          slug: blender
          installer: true
          requires:
            - get-ci-tools
          filters:
            tags:
              only: /([0-9]+)\.([0-9]+)\.([0-9]+)(?:-\w+)?$/
            branches:
              ignore: /.*/

      - build-connector-mac:
          name: Mac ARM Build
          slug: blender-mac-arm
          runtime: osx-arm64
          installer: true
          requires:
            - get-ci-tools
          filters:
            tags:
              only: /([0-9]+)\.([0-9]+)\.([0-9]+)(?:-\w+)?$/
            branches:
              ignore: /.*/

      - build-connector-mac:
          name: Mac Intel Build
          slug: blender-mac-intel
          runtime: osx-x64
          installer: true
          requires:
            - get-ci-tools
          filters:
            tags:
              only: /([0-9]+)\.([0-9]+)\.([0-9]+)(?:-\w+)?$/
            branches:
              ignore: /.*/

      - deploy-connector-new:
          name: deploy-win
          slug: blender
          file_slug: blender
          os: Win
          extension: exe
          arch: Any
          requires:
            - Windows Build
            - Mac ARM Build
            - Mac Intel Build
          filters:
            tags:
              only: /([0-9]+)\.([0-9]+)\.([0-9]+)(?:-\w+)?$/
            branches:
              ignore: /.*/ # For testing only! /ci\/.*/

      - deploy-connector-new:
          name: deploy-mac-intel
          slug: blender
          file_slug: blender-mac-intel
          os: OSX
          arch: Intel
          extension: zip
          requires:
            - Windows Build
            - Mac ARM Build
            - Mac Intel Build
          filters:
            tags:
              only: /([0-9]+)\.([0-9]+)\.([0-9]+)(?:-\w+)?$/
            branches:
              ignore: /.*/ # For testing only! /ci\/.*/
              
      - deploy-connector-new:
          name: deploy-mac-arm
          slug: blender
          file_slug: blender-mac-arm
          os: OSX
          arch: Arm
          extension: zip
          requires:
            - Windows Build
            - Mac ARM Build
            - Mac Intel Build
          filters:
            tags:
              only: /([0-9]+)\.([0-9]+)\.([0-9]+)(?:-\w+)?$/
            branches:
              ignore: /.*/ # For testing only! /ci\/.*/